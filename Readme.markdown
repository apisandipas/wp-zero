
WP-Zero is a starter theme that gives you:

* minimal HTML and templates to start
* full usage of HTML5
* configured to use Compass and Sass
* features to improve HTML generated by WordPress from adding better class names to menu items to using the ```article``` element for coments
* features to magically add the HTML for favicon, apple-touch-icons, and apple-start-up-images
* starter for themeing your login screen
* helpers from pagination to slugify function
* templates that are called via AJAX

# Usage #

1. Copy WP-Zero
2. Rename the folder to your theme
3. Find the string ```ZEROTHEME``` and replace with your theme name across the files
4. Update the information in style.css
5. Replace or delete the placeholder images for favicon, apple-touch-icon, and apple-start-up-image in the ```img/``` folder
6. Replace the ```screenshot.png``` image to reflect your design
7. Start themeing

# Features #

## 1. Apple touch icons ##

Simple place your icons in your theme's image directory and name them ```apple-touch-icon[-<X>x<Y>][-precomposed].png```. (Use the App icon template to assist: http://appicontemplate.com/)

2. Favicon: Simple place your favicon.ico in your sub-theme's image directory.

4. Editor CSS: By using the convention of using the prose class name to signal body-content, the WYSIWYG editor is automatically kept up-to-date in styles. It loads reset.less, editor.less, and prose.less into the WYSIWYG.

5. Menu class name: Add better class names to the menu items generated by WordPress.

6. WP page menu: Adds options 'container', 'container_id', and 'container_class' to wp_page_menu to match wp_nav_menu.

7. Remove gallery CSS: Removes the style element added by WordPress' gallery feature.

8. Pager: Creates function zero_paginate_index_links that wraps paginate_links to work to create pagers for index/archive pages.

9. Comments: Generate the comment tree with HTML5 elements and gain better control of comment themeing with Zero_Walker_Comment walker class.

10. Page title: Adds a function zero_wp_title() with hook zero_wp_title to remove page title logic from the header.php.

11. Threaded comments script: Adds WordPress' comment-reply script for moving the reply form below the comment replying to.


14. Login theme: Make your login page look like it is part of your site instead of WordPress. It will link the WordPress logo to your site - instead of wordpress.org - and change the tooltip text to your site name; additionally, it also includes ```css/login.css``` to allow you to customize the styles.

15. Easy template AJAX callback.

16. Theme options: Quickly make basic theme options page (Future).

# CSS Conventions #

There aren't many CSS conventions that Zero uses, it keeps a very small footprint on your styles. But there is one
to keep because it results in less work and better UX.

Use the class name ```prose``` to mark the element that contains body content such as the content of a post, page, or comment.
The first problem this solves is the issue with missing key styles for content because of a CSS reset.
The second issue is it makes it simple for keeping the WYSIWYG styles matching the actually results because ```prose```
class is added to the root of the WYSIWYG editor.

Place all the prose styles in ```sass/object/_prose.scss```. The ```prose```


# Header and footer templates #

You should not need to modify the footer.php or header.php templates because they only handle the doctype, head element, body element, and html element. 
To modify the start and end of the page, you can edit the body-header.php and body-footer.php templates.


# Helpers #

## Load templates while passing variables ##

It works like the WordPress core ```load_template``` function but this takes an additional parameter of custom variables.

```php
<?php
zero_load_template( locate_template( 'custom-template.php' ),  array( 'foo' => 'The value for the $foo var in the template' ) );
?>
```


## Load a template part with multiple specialized names  ##

It works like the WordPress core ```get_template_part``` function but this takes an array for the ```$name``` parameter.

```php
<?php
zero_get_template_part( 'loop', array( 'single-event', 'event', 'single' ) );
?>
```

## Slugify text ##

1. ```$text``` string - the text to slugify
2. ```$options``` optional array - ```force_lowercase``` boolean to lowercase the text (defaults to ```true```), ```separated_character``` is a string to separate words (defaults to ```'-'```), ```accepted_characters``` is the regex to match words (defaults to ```'\w'```)

```php
<?php
$slug = zero_slugify( 'Magazine Name' );
echo $slug;
// magazine-name
?>
```

## Format array as HTML attributes ##

```php
<div <?php echo zero_get_formatted_attributes( array( 'class' => array('first', 'push1', 'span3'), 'id' => 'album', 'data-name' => 'french' ) ); ?>>
```

